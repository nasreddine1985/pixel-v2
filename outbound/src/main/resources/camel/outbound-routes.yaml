# Outbound Message Processing Routes
# This file defines the main outbound message processing flows

- beans:
  - name: "outboundMessageProcessor"
    type: "com.pixel.v2.outbound.processor.OutboundMessageProcessor"

- route:
    id: "outbound-direct-input"
    description: "Handles messages received from direct endpoints"
    from:
      uri: "direct:outbound-input"
      steps:
        - log:
            message: "[OUTBOUND-DIRECT] Received message from direct endpoint: ${body}"
            loggingLevel: INFO
            
        - setHeader:
            name: "messageSource"
            constant: "DIRECT_ENDPOINT"
            
        - setHeader:
            name: "receiptTimestamp" 
            simple: "${date:now:yyyy-MM-dd HH:mm:ss.SSS}"
            
        - setHeader:
            name: "processingStage"
            constant: "OUTBOUND_RECEIVED"
            
        # Log the message using k-log-tx kamelet
        - to:
            uri: "kamelet:k-log-tx"
            parameters:
              logLevel: "INFO"
              logSource: "outbound-service"
              logCategory: "ROUTE"
              correlationId: "${exchangeId}"
              
        - log:
            message: "[OUTBOUND-DIRECT] Message logged, routing for processing"
            
        - to:
            uri: "direct:outbound-process-message"

- route:
    id: "outbound-kafka-input"
    description: "Handles messages received from Kafka topics using k-kafka-message-receiver"
    from:
      uri: "kamelet:k-kafka-message-receiver"
      parameters:
        bootstrapServers: "{{outbound.kafka.bootstrap-servers}}"
        topic: "{{outbound.kafka.topics.input}}"
        groupId: "{{outbound.kafka.group-id}}"
        offsetReset: "{{outbound.kafka.auto-offset-reset}}"
        routingEndpoint: "direct:outbound-kafka-received"
      steps:
        - log:
            message: "[OUTBOUND-KAFKA] Received message from Kafka via k-kafka-message-receiver"

- route:
    id: "outbound-kafka-received"
    description: "Processes messages received from Kafka"
    from:
      uri: "direct:outbound-kafka-received"
      steps:
        - log:
            message: "[OUTBOUND-KAFKA] Processing Kafka message: Topic=${header.kafkaTopic}, Partition=${header.kafkaPartition}, Offset=${header.kafkaOffset}"
            loggingLevel: INFO
            
        - setHeader:
            name: "processingStage"
            constant: "OUTBOUND_KAFKA_RECEIVED"
            
        # Log the Kafka message using k-log-tx kamelet
        - to:
            uri: "kamelet:k-log-tx"
            parameters:
              logLevel: "INFO"
              logSource: "outbound-service"
              logCategory: "ROUTE"
              correlationId: "${header.kafkaKey}"
              
        - log:
            message: "[OUTBOUND-KAFKA] Kafka message logged, routing for processing"
            
        - to:
            uri: "direct:outbound-process-message"

- route:
    id: "outbound-message-processor"
    description: "Main message processing logic"
    from:
      uri: "direct:outbound-process-message"
      steps:
        - log:
            message: "[OUTBOUND-PROCESSOR] Processing message from ${header.messageSource}"
            loggingLevel: INFO
            
        - setHeader:
            name: "processingStage"
            constant: "OUTBOUND_PROCESSING"
            
        # Process the message using custom processor
        - bean:
            ref: "outboundMessageProcessor"
            
        - choice:
            when:
              - simple: "${header.processingResult} == 'SUCCESS'"
                steps:
                  - log:
                      message: "[OUTBOUND-PROCESSOR] Message processed successfully"
                      
                  - setHeader:
                      name: "processingStage"
                      constant: "OUTBOUND_SUCCESS"
                      
                  # Log success using k-log-tx
                  - to:
                      uri: "kamelet:k-log-tx"
                      parameters:
                        logLevel: "INFO"
                        logSource: "outbound-service"
                        logCategory: "BUSINESS"
                        correlationId: "${exchangeId}"
                        
                  - to:
                      uri: "direct:outbound-route-message"
            otherwise:
              steps:
                - log:
                    message: "[OUTBOUND-PROCESSOR] Message processing failed: ${header.processingError}"
                    loggingLevel: ERROR
                    
                - setHeader:
                    name: "processingStage"
                    constant: "OUTBOUND_ERROR"
                    
                # Log error using k-log-tx
                - to:
                    uri: "kamelet:k-log-tx"
                    parameters:
                      logLevel: "ERROR"
                      logSource: "outbound-service"
                      logCategory: "ERROR"
                      correlationId: "${exchangeId}"
                      
                - to:
                    uri: "direct:outbound-error-handler"

- route:
    id: "outbound-message-router"
    description: "Routes processed messages to appropriate destinations"
    from:
      uri: "direct:outbound-route-message"
      steps:
        - log:
            message: "[OUTBOUND-ROUTER] Routing message based on type: ${header.messageType}"
            loggingLevel: INFO
            
        - setHeader:
            name: "processingStage"
            constant: "OUTBOUND_ROUTING"
            
        - choice:
            when:
              - simple: "${header.messageType} == 'PAYMENT'"
                steps:
                  - log:
                      message: "[OUTBOUND-ROUTER] Routing payment message"
                  - to:
                      uri: "direct:outbound-payment-handler"
              - simple: "${header.messageType} == 'TRANSACTION'"
                steps:
                  - log:
                      message: "[OUTBOUND-ROUTER] Routing transaction message"
                  - to:
                      uri: "direct:outbound-transaction-handler"
              - simple: "${header.messageType} == 'NOTIFICATION'"
                steps:
                  - log:
                      message: "[OUTBOUND-ROUTER] Routing notification message"
                  - to:
                      uri: "direct:outbound-notification-handler"
            otherwise:
              steps:
                - log:
                    message: "[OUTBOUND-ROUTER] Unknown message type, routing to default handler"
                - to:
                    uri: "direct:outbound-default-handler"

- route:
    id: "outbound-payment-handler"
    description: "Handles payment messages"
    from:
      uri: "direct:outbound-payment-handler"
      steps:
        - log:
            message: "[PAYMENT-HANDLER] Processing payment message: ${header.paymentId}"
            loggingLevel: INFO
            
        - setHeader:
            name: "processingStage"
            constant: "OUTBOUND_PAYMENT_PROCESSING"
            
        # Log payment processing
        - to:
            uri: "kamelet:k-log-tx"
            parameters:
              logLevel: "INFO"
              logSource: "outbound-service"
              logCategory: "BUSINESS"
              correlationId: "${header.paymentId}"
              
        # Add payment-specific processing logic here
        - log:
            message: "[PAYMENT-HANDLER] Payment message processed and sent"
            
        - to:
            uri: "{{outbound.direct.output-endpoint}}"

- route:
    id: "outbound-transaction-handler"
    description: "Handles transaction messages"
    from:
      uri: "direct:outbound-transaction-handler"
      steps:
        - log:
            message: "[TRANSACTION-HANDLER] Processing transaction message: ${header.transactionId}"
            loggingLevel: INFO
            
        - setHeader:
            name: "processingStage"
            constant: "OUTBOUND_TRANSACTION_PROCESSING"
            
        # Log transaction processing
        - to:
            uri: "kamelet:k-log-tx"
            parameters:
              logLevel: "INFO"
              logSource: "outbound-service"
              logCategory: "BUSINESS"
              correlationId: "${header.transactionId}"
              
        # Add transaction-specific processing logic here
        - log:
            message: "[TRANSACTION-HANDLER] Transaction message processed and sent"
            
        - to:
            uri: "{{outbound.direct.output-endpoint}}"

- route:
    id: "outbound-notification-handler"
    description: "Handles notification messages"
    from:
      uri: "direct:outbound-notification-handler"
      steps:
        - log:
            message: "[NOTIFICATION-HANDLER] Processing notification message"
            loggingLevel: INFO
            
        - setHeader:
            name: "processingStage"
            constant: "OUTBOUND_NOTIFICATION_PROCESSING"
            
        # Log notification processing
        - to:
            uri: "kamelet:k-log-tx"
            parameters:
              logLevel: "INFO"
              logSource: "outbound-service"
              logCategory: "BUSINESS"
              correlationId: "${exchangeId}"
              
        # Add notification-specific processing logic here
        - log:
            message: "[NOTIFICATION-HANDLER] Notification message processed and sent"
            
        - to:
            uri: "{{outbound.direct.output-endpoint}}"

- route:
    id: "outbound-default-handler"
    description: "Default handler for unknown message types"
    from:
      uri: "direct:outbound-default-handler"
      steps:
        - log:
            message: "[DEFAULT-HANDLER] Processing unknown message type"
            loggingLevel: WARN
            
        - setHeader:
            name: "processingStage"
            constant: "OUTBOUND_DEFAULT_PROCESSING"
            
        # Log default processing
        - to:
            uri: "kamelet:k-log-tx"
            parameters:
              logLevel: "WARN"
              logSource: "outbound-service"
              logCategory: "ROUTE"
              correlationId: "${exchangeId}"
              
        - log:
            message: "[DEFAULT-HANDLER] Message processed with default handler"
            
        - to:
            uri: "{{outbound.direct.output-endpoint}}"

- route:
    id: "outbound-error-handler"
    description: "Handles processing errors"
    from:
      uri: "direct:outbound-error-handler"
      steps:
        - log:
            message: "[ERROR-HANDLER] Handling processing error: ${header.processingError}"
            loggingLevel: ERROR
            
        - setHeader:
            name: "processingStage"
            constant: "OUTBOUND_ERROR_HANDLING"
            
        # Log error details
        - to:
            uri: "kamelet:k-log-tx"
            parameters:
              logLevel: "ERROR"
              logSource: "outbound-service"
              logCategory: "ERROR"
              correlationId: "${exchangeId}"
              
        # Add error handling logic here (e.g., send to DLQ, retry, etc.)
        - log:
            message: "[ERROR-HANDLER] Error handled, message processed"

- route:
    id: "outbound-output"
    description: "Final output endpoint for processed messages"
    from:
      uri: "{{outbound.direct.output-endpoint}}"
      steps:
        - log:
            message: "[OUTBOUND-OUTPUT] Message processing completed: ${body}"
            loggingLevel: INFO
            
        - setHeader:
            name: "processingStage"
            constant: "OUTBOUND_COMPLETED"
            
        # Final logging
        - to:
            uri: "kamelet:k-log-tx"
            parameters:
              logLevel: "INFO"
              logSource: "outbound-service"
              logCategory: "AUDIT"
              correlationId: "${exchangeId}"